---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { getEventNumber, formatTitle } from '../../utils/eventNumbering';
import CategoryIcon from '../../components/icons/CategoryIcon.astro';
import TagIcon from '../../components/icons/TagIcon.astro';
import PostCard from '../../components/PostCard.astro';

const posts = await getCollection('blog');
const allTags = [...new Set(posts.flatMap((post) => post.data.tags))];
const allCategories = [...new Set(posts.map((post) => post.data.categories))];

// Helper function to check if event is in the future
const isFutureEvent = (date?: Date | 'TBD') => {
  if (!(date instanceof Date)) return false;
  const now = new Date();
  // Reset time to start of day for comparison
  now.setHours(0, 0, 0, 0);
  const eventDate = new Date(date);
  eventDate.setHours(0, 0, 0, 0);
  return eventDate >= now;
};

// Sort posts: future events first (by date), then TBD events, then past events (newest first)
const sortedPosts = posts.sort((a, b) => {
  const aIsFuture = isFutureEvent(a.data.event_date);
  const bIsFuture = isFutureEvent(b.data.event_date);
  const aIsTBD = a.data.event_date === 'TBD';
  const bIsTBD = b.data.event_date === 'TBD';
  
  // Future events first
  if (aIsFuture && !bIsFuture) return -1;
  if (!aIsFuture && bIsFuture) return 1;
  
  // Then TBD events
  if (aIsTBD && !bIsTBD) return -1;
  if (!aIsTBD && bIsTBD) return 1;
  
  // If both are future events or both are past events, sort by date
  if (a.data.event_date instanceof Date && b.data.event_date instanceof Date) {
    return b.data.event_date.getTime() - a.data.event_date.getTime();
  }
  
  // If we get here, sort by post date
  return b.data.date.getTime() - a.data.date.getTime();
});
---

<Layout title="Blog | Dresden Blockchain">
  <main class="container-base py-8">
    <h1 class="heading-primary mb-8">Blog</h1>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-12">
      <div class="card-base card-hover p-6">
        <h2 class="heading-secondary mb-4 flex items-center gap-2">
          <CategoryIcon class="h-6 w-6" />
          Kategorien
        </h2>
        <div class="flex gap-3 flex-wrap">
          {
            allCategories.map((category) => (
              <a
                href={`/categories/${category}`}
                class="tag-base tag-light tag-hover"
              >
                {category}
              </a>
            ))
          }
        </div>
      </div>

      <div class="card-base card-hover p-6">
        <h2 class="heading-secondary mb-4 flex items-center gap-2">
          <TagIcon class="h-6 w-6" />
          Tags
        </h2>
        <div class="flex gap-2 flex-wrap">
          {
            allTags.map((tag) => (
              <a
                href={`/tags/${tag}`}
                class="tag-base tag-light tag-hover"
              >
                #{tag}
              </a>
            ))
          }
        </div>
      </div>
    </div>

    <div class="space-y-8">
      {
        sortedPosts.map((post) => {
          const isUpcoming = isFutureEvent(post.data.event_date);
          const isTBD = post.data.event_date === 'TBD';
          const eventNumber = getEventNumber(post, posts);
          const displayTitle = formatTitle(post, eventNumber);
          return (
            <PostCard
              post={post}
              isUpcoming={isUpcoming}
              isTBD={isTBD}
              eventNumber={eventNumber}
              displayTitle={displayTitle}
            />
          );
        })
      }
    </div>
  </main>
</Layout>

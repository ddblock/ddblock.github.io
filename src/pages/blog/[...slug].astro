---
import { type CollectionEntry, getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { getEventNumber, formatTitle } from '../../utils/eventNumbering';
import { generateICS } from '../../utils/icsGenerator';
import CalendarIcon from '../../components/icons/CalendarIcon.astro';
import LocationIcon from '../../components/icons/LocationIcon.astro';
import TimeIcon from '../../components/icons/TimeIcon.astro';
import MapIcon from '../../components/icons/MapIcon.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content } = await post.render();

// Get all posts to calculate event number
const allPosts = await getCollection('blog');
const eventNumber = getEventNumber(post, allPosts);
const displayTitle = formatTitle(post, eventNumber);

// Format event date if available
const eventDate = post.data.event_date instanceof Date 
  ? post.data.event_date.toLocaleDateString('de-DE', {
    weekday: 'long',
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  })
  : 'Wird noch bekannt gegeben';

const eventTime = post.data.event_date instanceof Date
  ? post.data.event_date.toLocaleTimeString('de-DE', {
    hour: '2-digit',
    minute: '2-digit',
  }) + ' Uhr'
  : 'TBD';

// Generate ICS file content if this is an event with a date
const icsContent = post.data.event_date instanceof Date ? generateICS({
  title: displayTitle,
  startDate: post.data.event_date,
  location: post.data.event_location_name || '',
  locationUrl: post.data.event_location_url || '',
  description: post.data.description,
}) : null;

// Create data URL for download
const icsDataUrl = icsContent ? `data:text/calendar;charset=utf-8,${encodeURIComponent(icsContent)}` : null;
---

<Layout title={`${displayTitle} | Dresden Blockchain`}>
  <main class="container-base py-8">
    <article>
      <header class="mb-12">
        <h1 class="heading-primary mb-6 leading-tight">
          {displayTitle}
        </h1>

        {
          post.data.categories === 'stammtisch' && (
            <div class="card-base card-hover p-8 mb-8">
              <div class="heading-secondary mb-6">
                {post.data.event_date === 'TBD' ? 'Geplantes Treffen' : 'Nächstes Treffen'}
              </div>
              <div class="grid grid-cols-1 md:grid-cols-2 gap-8 items-start">
                <div class="flex items-start gap-4 text-blockchain-primary group">
                  <div class="icon-container">
                    <TimeIcon class="h-6 w-6" />
                  </div>
                  <div>
                    <div class="font-semibold text-lg mb-1">Datum & Uhrzeit</div>
                    <div class="text-blockchain-secondary">{eventDate}</div>
                    {post.data.event_date instanceof Date && (
                      <div class="text-blockchain-secondary mt-1">{eventTime}</div>
                    )}
                  </div>
                </div>
                {post.data.event_date instanceof Date && (
                  <div class="flex items-start gap-4 text-blockchain-primary group">
                    <div class="icon-container">
                      <CalendarIcon class="h-6 w-6" />
                    </div>
                    <div>
                      <div class="font-semibold text-lg mb-1">Erinnerung</div>
                      <a
                        href={icsDataUrl}
                        download={`${post.slug}.ics`}
                        class="text-blockchain-secondary hover:text-blockchain-accent transition-colors"
                      >
                        Zum Kalender hinzufügen
                      </a>
                    </div>
                  </div>
                )}
                {post.data.event_location_name && (
                  <div class="flex items-start gap-4 text-blockchain-primary group">
                    <div class="icon-container">
                      <LocationIcon class="h-6 w-6" />
                    </div>
                    <div>
                      <div class="font-semibold text-lg mb-1">Location</div>
                      <div class="text-blockchain-secondary mb-2">
                        {post.data.event_location_name}
                      </div>
                    </div>
                  </div>
                )}
                {post.data.event_location_url && (
                  <a 
                    class="flex items-start gap-4 text-blockchain-primary group hover:text-blockchain-accent transition-colors"
                    href={post.data.event_location_url}
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    <div class="icon-container">
                      <MapIcon class="h-6 w-6" />
                    </div>
                    <div>
                      <div class="font-semibold text-lg mb-1">Wegbeschreibung</div>
                      <div class="text-blockchain-secondary group-hover:text-blockchain-accent transition-colors">
                        Auf Google Maps öffnen
                      </div>
                    </div>
                  </a>
                )}
              </div>
            </div>
          )
        }

        <div class="flex flex-wrap gap-4 items-center">
          <time datetime={post.data.date.toISOString()} class="date-display">
            {
              post.data.date.toLocaleDateString('de-DE', {
                year: 'numeric',
                month: 'long',
                day: 'numeric',
              })
            }
          </time>
          {
            post.data.tags && (
              <div class="flex gap-2 flex-wrap">
                {post.data.tags.map((tag) => (
                  <a href={`/tags/${tag}`} class="tag-base tag-light tag-hover">
                    #{tag}
                  </a>
                ))}
              </div>
            )
          }
        </div>
      </header>
      <div class="prose prose-lg max-w-none">
        <Content />
      </div>
    </article>
  </main>
</Layout>

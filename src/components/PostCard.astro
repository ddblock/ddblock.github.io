---
import type { CollectionEntry } from 'astro:content';
import { formatDate } from '../utils/date';

interface Props {
  post: CollectionEntry<'blog'>;
  filterType: 'tag' | 'category';
  filterValue: string;
}

const { post, filterType, filterValue } = Astro.props;
const filterItems = filterType === 'tag' ? post.data.tags : post.data.categories;
---

<article class="post-card">
  <a href={`/blog/${post.slug}`} class="post-link">
    <h2 class="post-title">
      {post.data.title}
    </h2>
    
    <time datetime={post.data.date.toISOString()} class="post-date">
      {formatDate(post.data.date)}
    </time>
    
    <div class="post-tags">
      {filterItems?.map((item) => (
        <a
          href={`/${filterType}s/${item}`}
          class:list={[
            'post-tag',
            item === filterValue
              ? 'post-tag-active'
              : 'post-tag-inactive',
          ]}
        >
          {item}
        </a>
      ))}
    </div>
  </a>
</article>

<style is:global>
  /* Base styles */
  .post-card {
    @apply border-l-4 border-blockchain-accent hover:border-blockchain-primary;
  }
  .post-link {
    @apply block pl-4;
  }
  .post-title {
    @apply text-2xl text-blockchain-primary;
  }
  
  /* Interactive states */
  .post-link:hover .post-title {
    @apply text-blockchain-accent;
  }
  
  /* Content styles */
  .post-date {
    @apply mt-2 text-blockchain-secondary;
  }
  .post-tags {
    @apply mt-2 flex flex-wrap gap-2;
  }
  
  /* Tag styles */
  .post-tag {
    @apply rounded-full px-2 py-1 text-sm;
  }
  .post-tag-active {
    @apply bg-blockchain-primary text-white;
  }
  .post-tag-inactive {
    @apply bg-blockchain-light text-blockchain-primary;
  }
  .post-tag-inactive:hover {
    @apply bg-blockchain-accent text-white;
  }
</style> 